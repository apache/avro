searchState.loadedDescShard("crypto_common", 0, "Common cryptographic traits.\nTrait which stores algorithm name constant, used in <code>Debug</code> …\nBlock on which <code>BlockSizeUser</code> implementors operate.\nSize of the block in bytes.\nTypes which process data in blocks.\nInner type.\nTypes which can be initialized from another type (usually …\nTypes which can be initialized from another type and …\nTypes which use another type for initialization.\nThe error type returned when key and/or IV used in the …\nInitialization vector (nonce) used by <code>IvSizeUser</code> …\nInitialization vector size in bytes.\nTypes which use initialization vector (nonce) for …\nKey used by <code>KeySizeUser</code> implementors.\nTypes which can be initialized from key.\nTypes which can be initialized from key and initialization …\nKey size in bytes.\nTypes which use key for initialization.\nOutput array of <code>OutputSizeUser</code> implementors.\nSize of the output in bytes.\nTypes which return data with the given size.\nParallel blocks on which <code>ParBlocksSizeUser</code> implementors …\nNumber of blocks which can be processed in parallel.\nTypes which can process blocks in parallel.\nResettable types.\nReturn block size in bytes.\nReturns the argument unchanged.\nInitialize value from the <code>inner</code>.\nInitialize value using <code>inner</code> and <code>iv</code> array.\nInitialize value using <code>inner</code> and <code>iv</code> slice.\nCalls <code>U::from(self)</code>.\nReturn IV size in bytes.\nReturn key size in bytes.\nCreate new value from fixed size key.\nCreate new value from fixed length key and nonce.\nCreate new value from variable size key.\nCreate new value from variable length key and nonce.\nReturn output size in bytes.\nReset state to its initial value.\nWrite algorithm name into <code>f</code>.")