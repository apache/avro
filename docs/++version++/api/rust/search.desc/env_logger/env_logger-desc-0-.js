searchState.loadedDescShard("env_logger", 0, "A simple logger that can be configured via environment …\n<code>Builder</code> acts as builder for initializing a <code>Logger</code>.\nThe default name for the environment variable to read …\nThe default name for the environment variable to read …\nSet of environment variables to configure from.\nThe env logger.\nBuild an env logger.\nCreate a new builder with the default environment …\nUse the default environment variable to read the filter …\nUse the default format.\nUse the default environment variable to read the style …\nReturns the maximum <code>LevelFilter</code> that this env logger …\nAdds filters to the logger.\nSpecify an environment variable to read the filter from.\nAdds a directive to the filter for all modules.\nAdds a directive to the filter for a specific module.\nSpecify an environment variable to read the filter from.\nFormatting for log records.\nSets the format function for formatting the log output.\nWhether or not to write the source file path in the …\nConfigures the amount of spaces to use to indent multiline …\nWhether or not to write the level in the default format.\nWhether or not to write the source line number path in the …\nWhether or not to write the module path in the default …\nWhether or not to write the source path and line number\nConfigures the end of line suffix.\nWhether or not to write the target in the default format.\nConfigures if timestamp should be included and in what …\nConfigures the timestamp to use microsecond precision.\nConfigures the timestamp to use millisecond precision.\nConfigures the timestamp to use nanosecond precision.\nConfigures the timestamp to use second precision.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates the logger from the environment using default …\nInitializes the log builder from the environment using …\nCreate a builder from the given environment variables.\nCreates the logger from the environment.\nInitializes the log builder from the environment.\nInitializes the global logger with an env logger.\nInitializes the global logger with the built env logger.\nInitializes the global logger with an env logger from the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets whether or not the logger will be used in unit tests.\nChecks if this record matches the configured filter.\nInitializes the log builder with defaults.\nGet a default set of environment variables.\nApplies the configuration from the environment using …\nApplies the configuration from the environment.\nParses the directives string in the same form as the …\nParses whether or not to write styles in the same form as …\nSets the target for the log output.\nAttempts to initialize the global logger with an env …\nInitializes the global logger with the built env logger.\nAttempts to initialize the global logger with an env …\nSets whether or not styles will be written.\nSpecify an environment variable to read the style from.\nSpecify an environment variable to read the style from.\nTry very hard to print styles.\nTry to print styles, but don’t force the issue.\nA custom format with settings for which fields to show\nA formatter to write logs into.\nMicrosecond precision (6 decimal digits)\nMillisecond precision (3 decimal digits)\nNanosecond precision (9 decimal digits)\nNever print styles.\nLogs will be sent to a custom pipe.\nFull second precision (0 decimal digits)\nLogs will be sent to standard error.\nLogs will be sent to standard output.\nLog target, either <code>stdout</code>, <code>stderr</code> or a custom pipe.\nFormatting precision of timestamps.\nWhether or not to print styles to the target.\nWhether or not to write the source file path in the …\nFormat the <code>Record</code> as configured for outputting\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConfigures the amount of spaces to use to indent multiline …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether or not to write the level in the default format.\nWhether or not to write the source line number path in the …\nWhether or not to write the module path in the default …\nConfigures the end of line suffix.\nWhether or not to write the target in the default format.\nConfigures if timestamp should be included and in what …")