searchState.loadedDescShard("snap", 0, "This crate provides an implementation of the Snappy …\nThis error occurs when the given buffer is too small to …\nThis error occurs when a checksum validity check fails. …\nThis error occurs during decompression when there was a …\nThis error occurs during decompression when there was a …\nThis error occurs when trying to decompress a zero length …\nContains the error value\nError describes all the possible errors that may occur …\nThis error occurs when an invalid header is found during …\nThis error occurs when there is a mismatch between the …\nThis error occurs during decompression when there was a …\nThis error occurs during decompression when an invalid …\nContains the success value\nA convenient type alias for <code>Result&lt;T, snap::Error&gt;</code>.\nThis error occurs when a stream header chunk type was …\nThis error occurs when the magic stream headers bytes do …\nThis error occurs when the given input is too big. This …\nThis error occurs when trying to read a chunk with an …\nThis error occurs when an unsupported chunk type is seen. …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis module provides a raw Snappy encoder and decoder.\nThis module provides two <code>std::io::Read</code> implementations:\nThis module provides a <code>std::io::Write</code> implementation:\nThe chunk type byte that was read.\nThe chunk type byte that was read.\nThe bytes that were read.\nThe number of remaining slots in the decompression buffer.\nThe number of remaining bytes in the decompression buffer.\nThe current position in the decompression buffer. If the …\nThe expected checksum read from the stream.\nThe total number of decompressed bytes expected (i.e., the …\nThe size of the given input.\nThe size of the given output buffer.\nThe computed checksum.\nThe total number of actual decompressed bytes.\nTrue when this error occured while reading the stream …\nThe expected length of the literal.\nThe expected length of the copy (as encoded in the …\nThe length of the copy (i.e., the total number of bytes to …\nThe length of the chunk encountered.\nThe maximum allowed size of an input buffer.\nThe minimum size of the output buffer.\nThe offset that was read.\nThe number of remaining bytes in the compressed bytes.\nThe number of remaining bytes in the compressed bytes.\nDecoder is a raw decoder for decompressing bytes in the …\nEncoder is a raw encoder for compressing bytes in the …\nCompresses all bytes in <code>input</code> into <code>output</code>.\nCompresses all bytes in <code>input</code> into a freshly allocated <code>Vec</code>.\nDecompresses all bytes in <code>input</code> into <code>output</code>.\nReturns the decompressed size (in bytes) of the compressed …\nDecompresses all bytes in <code>input</code> into a freshly allocated …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the maximum compressed size given the uncompressed …\nReturn a new encoder that can be used for compressing …\nReturn a new decoder that can be used for decompressing …\nA reader for decompressing a Snappy stream.\nA reader for compressing data using snappy as it is read.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a mutable reference to the underlying reader in this …\nGets a mutable reference to the underlying reader in this …\nGets a reference to the underlying reader in this decoder.\nGets a reference to the underlying reader in this decoder.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the underlying reader of this decoder.\nCreate a new reader for streaming Snappy decompression.\nCreate a new reader for streaming Snappy compression.\nA writer for compressing a Snappy stream.\n<code>IntoInnerError</code> occurs when consuming an encoder fails.\nReturns the error which caused the call to <code>into_inner</code> to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to the underlying writer in this encoder.\nGets a reference to the underlying writer in this encoder.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the error which caused the call to <code>into_inner</code> to …\nReturns the underlying writer which generated the error.\nReturns the underlying stream, consuming and flushing this …\nCreate a new writer for streaming Snappy compression.")