(function() {
    var type_impls = Object.fromEntries([["gimli",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#impl-Clone-for-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.90.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","gimli::read::EndianBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#181-188\">Source</a><a href=\"#impl-Debug-for-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#182-187\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.90.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","gimli::read::EndianBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#impl-Default-for-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","gimli::read::EndianBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#171-179\">Source</a><a href=\"#impl-Deref-for-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#175\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>]</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#176-178\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","gimli::read::EndianBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#112-169\">Source</a><a href=\"#impl-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a>,</div></h3><div class=\"docblock\"><h4 id=\"range-methods\"><a class=\"doc-anchor\" href=\"#range-methods\">§</a>Range Methods</h4>\n<p>Unfortunately, <code>std::ops::Index</code> <em>must</em> return a reference, so we can’t\nimplement <code>Index&lt;Range&lt;usize&gt;&gt;</code> to return a new <code>EndianSlice</code> the way we would\nlike to. Instead, we abandon fancy indexing operators and have these plain\nold methods.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.range\" class=\"method\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#127-132\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gimli/read/struct.EndianSlice.html#tymethod.range\" class=\"fn\">range</a>(&amp;self, idx: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/range/struct.Range.html\" title=\"struct core::ops::range::Range\">Range</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;</h4></section></summary><div class=\"docblock\"><p>Take the given <code>start..end</code> range of the underlying slice and return a\nnew <code>EndianSlice</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>gimli::{EndianSlice, LittleEndian};\n\n<span class=\"kw\">let </span>slice = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0x01</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x04</span>];\n<span class=\"kw\">let </span>endian_slice = EndianSlice::new(slice, LittleEndian);\n<span class=\"macro\">assert_eq!</span>(endian_slice.range(<span class=\"number\">1</span>..<span class=\"number\">3</span>),\n           EndianSlice::new(<span class=\"kw-2\">&amp;</span>slice[<span class=\"number\">1</span>..<span class=\"number\">3</span>], LittleEndian));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.range_from\" class=\"method\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#145-150\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gimli/read/struct.EndianSlice.html#tymethod.range_from\" class=\"fn\">range_from</a>(&amp;self, idx: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/range/struct.RangeFrom.html\" title=\"struct core::ops::range::RangeFrom\">RangeFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;</h4></section></summary><div class=\"docblock\"><p>Take the given <code>start..</code> range of the underlying slice and return a new\n<code>EndianSlice</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>gimli::{EndianSlice, LittleEndian};\n\n<span class=\"kw\">let </span>slice = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0x01</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x04</span>];\n<span class=\"kw\">let </span>endian_slice = EndianSlice::new(slice, LittleEndian);\n<span class=\"macro\">assert_eq!</span>(endian_slice.range_from(<span class=\"number\">2</span>..),\n           EndianSlice::new(<span class=\"kw-2\">&amp;</span>slice[<span class=\"number\">2</span>..], LittleEndian));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.range_to\" class=\"method\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#163-168\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gimli/read/struct.EndianSlice.html#tymethod.range_to\" class=\"fn\">range_to</a>(&amp;self, idx: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/core/ops/range/struct.RangeTo.html\" title=\"struct core::ops::range::RangeTo\">RangeTo</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;</h4></section></summary><div class=\"docblock\"><p>Take the given <code>..end</code> range of the underlying slice and return a new\n<code>EndianSlice</code>.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>gimli::{EndianSlice, LittleEndian};\n\n<span class=\"kw\">let </span>slice = <span class=\"kw-2\">&amp;</span>[<span class=\"number\">0x01</span>, <span class=\"number\">0x02</span>, <span class=\"number\">0x03</span>, <span class=\"number\">0x04</span>];\n<span class=\"kw\">let </span>endian_slice = EndianSlice::new(slice, LittleEndian);\n<span class=\"macro\">assert_eq!</span>(endian_slice.range_to(..<span class=\"number\">3</span>),\n           EndianSlice::new(<span class=\"kw-2\">&amp;</span>slice[..<span class=\"number\">3</span>], LittleEndian));</code></pre></div>\n</div></details></div></details>",0,"gimli::read::EndianBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#26-104\">Source</a><a href=\"#impl-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#32-34\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gimli/read/struct.EndianSlice.html#tymethod.new\" class=\"fn\">new</a>(slice: &amp;'input [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>], endian: Endian) -&gt; <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a new <code>EndianSlice</code> with the given slice and endianity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#46-48\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gimli/read/struct.EndianSlice.html#tymethod.slice\" class=\"fn\">slice</a>(&amp;self) -&gt; &amp;'input [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>]</h4></section></summary><div class=\"docblock\"><p>Return a reference to the raw slice.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_at\" class=\"method\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#54-59\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gimli/read/struct.EndianSlice.html#tymethod.split_at\" class=\"fn\">split_at</a>(\n    &amp;self,\n    idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>,\n) -&gt; (<a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;, <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;)</h4></section></summary><div class=\"docblock\"><p>Split the slice in two at the given index, resulting in the tuple where\nthe first item has range [0, idx), and the second has range [idx,\nlen). Panics if the index is out of bounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#63-65\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gimli/read/struct.EndianSlice.html#tymethod.find\" class=\"fn\">find</a>(&amp;self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Find the first occurrence of a byte in the slice, and return its index.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_from\" class=\"method\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#70-76\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gimli/read/struct.EndianSlice.html#tymethod.offset_from\" class=\"fn\">offset_from</a>(&amp;self, base: <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Return the offset of the start of the slice relative to the start\nof the given slice.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_string\" class=\"method\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#82-84\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gimli/read/struct.EndianSlice.html#tymethod.to_string\" class=\"fn\">to_string</a>(&amp;self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;&amp;'input <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts the slice to a string using <code>str::from_utf8</code>.</p>\n<p>Returns an error if the slice contains invalid characters.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_string_lossy\" class=\"method\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#90-92\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gimli/read/struct.EndianSlice.html#tymethod.to_string_lossy\" class=\"fn\">to_string_lossy</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'input, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts the slice to a string, including invalid characters,\nusing <code>String::from_utf8_lossy</code>.</p>\n</div></details></div></details>",0,"gimli::read::EndianBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#impl-Hash-for-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.90.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","gimli::read::EndianBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#impl-PartialEq-for-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.90.0/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","gimli::read::EndianBuf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reader-for-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#219-332\">Source</a><a href=\"#impl-Reader-for-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"trait\" href=\"gimli/read/trait.Reader.html\" title=\"trait gimli::read::Reader\">Reader</a> for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Endian\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#223\">Source</a><a href=\"#associatedtype.Endian\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gimli/read/trait.Reader.html#associatedtype.Endian\" class=\"associatedtype\">Endian</a> = Endian</h4></section></summary><div class='docblock'>The endianity of bytes that are read.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Offset\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#224\">Source</a><a href=\"#associatedtype.Offset\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" class=\"associatedtype\">Offset</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The type used for offsets and lengths.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.endian\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#227-229\">Source</a><a href=\"#method.endian\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.endian\" class=\"fn\">endian</a>(&amp;self) -&gt; Endian</h4></section></summary><div class='docblock'>Return the endianity of bytes that are read.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#232-234\">Source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the number of bytes remaining.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#237-239\">Source</a><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return true if the number of bytes remaining is zero.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#242-244\">Source</a><a href=\"#method.empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.empty\" class=\"fn\">empty</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Set the number of bytes remaining to zero.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#247-254\">Source</a><a href=\"#method.truncate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.truncate\" class=\"fn\">truncate</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Set the number of bytes remaining to the specified length.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#257-259\">Source</a><a href=\"#method.offset_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.offset_from\" class=\"fn\">offset_from</a>(&amp;self, base: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the offset of this reader’s data relative to the start of\nthe given base reader’s data. <a href=\"gimli/read/trait.Reader.html#tymethod.offset_from\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#262-264\">Source</a><a href=\"#method.offset_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.offset_id\" class=\"fn\">offset_id</a>(&amp;self) -&gt; <a class=\"struct\" href=\"gimli/read/struct.ReaderOffsetId.html\" title=\"struct gimli::read::ReaderOffsetId\">ReaderOffsetId</a></h4></section></summary><div class='docblock'>Return an identifier for the current reader offset.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_offset_id\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#267-276\">Source</a><a href=\"#method.lookup_offset_id\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.lookup_offset_id\" class=\"fn\">lookup_offset_id</a>(&amp;self, id: <a class=\"struct\" href=\"gimli/read/struct.ReaderOffsetId.html\" title=\"struct gimli::read::ReaderOffsetId\">ReaderOffsetId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>&gt;</h4></section></summary><div class='docblock'>Return the offset corresponding to the given <code>id</code> if\nit is associated with this reader.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#279-282\">Source</a><a href=\"#method.find\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.find\" class=\"fn\">find</a>(&amp;self, byte: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Find the index of the first occurrence of the given byte.\nThe offset of the reader is not changed.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#285-292\">Source</a><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.skip\" class=\"fn\">skip</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Discard the specified number of bytes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#295-298\">Source</a><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.split\" class=\"fn\">split</a>(&amp;mut self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Split a reader in two. <a href=\"gimli/read/trait.Reader.html#tymethod.split\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#307-309\">Source</a><a href=\"#method.to_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.to_slice\" class=\"fn\">to_slice</a>(&amp;self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>]&gt;&gt;</h4></section></summary><div class='docblock'>Return all remaining data as a clone-on-write slice. <a href=\"gimli/read/trait.Reader.html#tymethod.to_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_string\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#313-318\">Source</a><a href=\"#method.to_string\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.to_string\" class=\"fn\">to_string</a>(&amp;self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.str.html\">str</a>&gt;&gt;</h4></section></summary><div class='docblock'>Convert all remaining data to a clone-on-write string. <a href=\"gimli/read/trait.Reader.html#tymethod.to_string\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_string_lossy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#322-324\">Source</a><a href=\"#method.to_string_lossy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.to_string_lossy\" class=\"fn\">to_string_lossy</a>(&amp;self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.90.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'_, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.str.html\">str</a>&gt;&gt;</h4></section></summary><div class='docblock'>Convert all remaining data to a clone-on-write string, including invalid characters. <a href=\"gimli/read/trait.Reader.html#tymethod.to_string_lossy\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#327-331\">Source</a><a href=\"#method.read_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#tymethod.read_slice\" class=\"fn\">read_slice</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Read exactly <code>buf.len()</code> bytes into <code>buf</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u8_array\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#347-354\">Source</a><a href=\"#method.read_u8_array\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_u8_array\" class=\"fn\">read_u8_array</a>&lt;A&gt;(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class='docblock'>Read a u8 array.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#364-367\">Source</a><a href=\"#method.read_u8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_u8\" class=\"fn\">read_u8</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Read a u8.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i8\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#371-374\">Source</a><a href=\"#method.read_i8\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_i8\" class=\"fn\">read_i8</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Read an i8.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#378-381\">Source</a><a href=\"#method.read_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_u16\" class=\"fn\">read_u16</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Read a u16.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#385-388\">Source</a><a href=\"#method.read_i16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_i16\" class=\"fn\">read_i16</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Read an i16.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#392-395\">Source</a><a href=\"#method.read_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_u32\" class=\"fn\">read_u32</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Read a u32.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#399-402\">Source</a><a href=\"#method.read_i32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_i32\" class=\"fn\">read_i32</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Read an i32.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_u64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#406-409\">Source</a><a href=\"#method.read_u64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_u64\" class=\"fn\">read_u64</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Read a u64.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_i64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#413-416\">Source</a><a href=\"#method.read_i64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_i64\" class=\"fn\">read_i64</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Read an i64.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#420-423\">Source</a><a href=\"#method.read_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_f32\" class=\"fn\">read_f32</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.f32.html\">f32</a>&gt;</h4></section></summary><div class='docblock'>Read a f32.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_f64\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#427-430\">Source</a><a href=\"#method.read_f64\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_f64\" class=\"fn\">read_f64</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.f64.html\">f64</a>&gt;</h4></section></summary><div class='docblock'>Read a f64.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_uint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#438-442\">Source</a><a href=\"#method.read_uint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_uint\" class=\"fn\">read_uint</a>(&amp;mut self, n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Read an unsigned n-bytes integer u64. <a href=\"gimli/read/trait.Reader.html#method.read_uint\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_null_terminated_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#445-450\">Source</a><a href=\"#method.read_null_terminated_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_null_terminated_slice\" class=\"fn\">read_null_terminated_slice</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Read a null-terminated slice, and return it (excluding the null).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip_leb128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#453-455\">Source</a><a href=\"#method.skip_leb128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.skip_leb128\" class=\"fn\">skip_leb128</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Skip a LEB128 encoded integer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_uleb128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#458-460\">Source</a><a href=\"#method.read_uleb128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_uleb128\" class=\"fn\">read_uleb128</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Read an unsigned LEB128 encoded integer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_uleb128_u32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#463-467\">Source</a><a href=\"#method.read_uleb128_u32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_uleb128_u32\" class=\"fn\">read_uleb128_u32</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Read an unsigned LEB128 encoded u32.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_uleb128_u16\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#470-472\">Source</a><a href=\"#method.read_uleb128_u16\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_uleb128_u16\" class=\"fn\">read_uleb128_u16</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Read an unsigned LEB128 encoded u16.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_sleb128\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#475-477\">Source</a><a href=\"#method.read_sleb128\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_sleb128\" class=\"fn\">read_sleb128</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Read a signed LEB128 encoded integer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_initial_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#483-496\">Source</a><a href=\"#method.read_initial_length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_initial_length\" class=\"fn\">read_initial_length</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;(Self::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>, <a class=\"enum\" href=\"gimli/enum.Format.html\" title=\"enum gimli::Format\">Format</a>)&gt;</h4></section></summary><div class='docblock'>Read an initial length field. <a href=\"gimli/read/trait.Reader.html#method.read_initial_length\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_address_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#499-505\">Source</a><a href=\"#method.read_address_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_address_size\" class=\"fn\">read_address_size</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Read a byte and validate it as an address size.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_address\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#508-516\">Source</a><a href=\"#method.read_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_address\" class=\"fn\">read_address</a>(&amp;mut self, address_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Read an address-sized integer, and return it as a <code>u64</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_word\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#522-527\">Source</a><a href=\"#method.read_word\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_word\" class=\"fn\">read_word</a>(&amp;mut self, format: <a class=\"enum\" href=\"gimli/enum.Format.html\" title=\"enum gimli::Format\">Format</a>) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>&gt;</h4></section></summary><div class='docblock'>Parse a word-sized integer according to the DWARF format. <a href=\"gimli/read/trait.Reader.html#method.read_word\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#531-533\">Source</a><a href=\"#method.read_length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_length\" class=\"fn\">read_length</a>(&amp;mut self, format: <a class=\"enum\" href=\"gimli/enum.Format.html\" title=\"enum gimli::Format\">Format</a>) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>&gt;</h4></section></summary><div class='docblock'>Parse a word-sized section length according to the DWARF format.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_offset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#537-539\">Source</a><a href=\"#method.read_offset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_offset\" class=\"fn\">read_offset</a>(&amp;mut self, format: <a class=\"enum\" href=\"gimli/enum.Format.html\" title=\"enum gimli::Format\">Format</a>) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>&gt;</h4></section></summary><div class='docblock'>Parse a word-sized section offset according to the DWARF format.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_sized_offset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gimli/read/reader.rs.html#544-553\">Source</a><a href=\"#method.read_sized_offset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"gimli/read/trait.Reader.html#method.read_sized_offset\" class=\"fn\">read_sized_offset</a>(&amp;mut self, size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/core/primitive.u8.html\">u8</a>) -&gt; <a class=\"type\" href=\"gimli/read/type.Result.html\" title=\"type gimli::read::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"gimli/read/trait.Reader.html#associatedtype.Offset\" title=\"type gimli::read::Reader::Offset\">Offset</a>&gt;</h4></section></summary><div class='docblock'>Parse a section offset of the given size. <a href=\"gimli/read/trait.Reader.html#method.read_sized_offset\">Read more</a></div></details></div></details>","Reader","gimli::read::EndianBuf"],["<section id=\"impl-Copy-for-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#impl-Copy-for-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","gimli::read::EndianBuf"],["<section id=\"impl-Eq-for-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#impl-Eq-for-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","gimli::read::EndianBuf"],["<section id=\"impl-StructuralPartialEq-for-EndianSlice%3C'input,+Endian%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gimli/read/endian_slice.rs.html#17\">Source</a><a href=\"#impl-StructuralPartialEq-for-EndianSlice%3C'input,+Endian%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'input, Endian&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"gimli/read/struct.EndianSlice.html\" title=\"struct gimli::read::EndianSlice\">EndianSlice</a>&lt;'input, Endian&gt;<div class=\"where\">where\n    Endian: <a class=\"trait\" href=\"gimli/trait.Endianity.html\" title=\"trait gimli::Endianity\">Endianity</a>,</div></h3></section>","StructuralPartialEq","gimli::read::EndianBuf"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[61961]}