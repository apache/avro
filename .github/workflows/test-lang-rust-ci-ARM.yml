# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: 'Rust Continuous Integration on ARM'
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
      - .github/workflows/test-lang-rust-ci.yml
      - lang/rust/**

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: 'git' # TODO: remove this env var once MSRV is 1.70.0+

defaults:
  run:
    working-directory: lang/rust

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  arm64:
    name: Rust on Linux ARM64
    runs-on: ["self-hosted", "asf-arm"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          # these represent dependencies downloaded by cargo
          # and thus do not depend on the OS, arch nor rust version.
          path: ~/.cargo
          key: ${{ runner.os }}-target-arm64-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          # these represent compiled steps of both dependencies and avro
          # and thus are specific for a particular OS, arch and rust version.
          path: lang/rust/target
          key: ${{ runner.os }}-target-cache1-stable-

      - name: Rust Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: stable
          components: rustfmt
          targets: x86_64-unknown-linux-gnu

      - name: Build
        run: |
          set -x
          ./build.sh test
