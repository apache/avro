# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Test Python'
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
    - .github/workflows/test-lang-py.yml
    - lang/py/**

defaults:
  run:
    working-directory: lang/py

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Python ${{ matrix.python }} Tests
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python:
        - '3.11'
        - '3.10'
        - '3.9'
        - '3.8'
        - '3.7'
        - 'pypy-3.7'
        - 'pypy-3.8'
        - 'pypy-3.9'
        - 'pypy-3.10'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Apt Install Compression Libs
        run: |
          sudo apt-get install -qqy --no-install-recommends libbz2-dev \
                                                            libjansson-dev \
                                                            liblzma-dev \
                                                            libsnappy-dev \
                                                            libzstd-dev

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools tox

      - name: Lint
        if: ${{ matrix.python == '3.10' }}
        run: python3 -m tox -e lint

      - name: Typechecks
        if: ${{ matrix.python == '3.10' }}
        run: python3 -m tox -e typechecks

      - name: Test
        run: python3 -m tox -e py

  interop:
    name: Python ${{ matrix.python }} Interop
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python:
        - '3.11'
        - '3.10'
        - '3.9'
        - '3.8'
        - '3.7'
        - 'pypy-3.7'
        - 'pypy-3.8'
        - 'pypy-3.9'
        - 'pypy-3.10'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Apt Install Compression Libs
        run: |
          sudo apt-get install -qqy --no-install-recommends libbz2-dev \
                                                            libjansson-dev \
                                                            liblzma-dev \
                                                            libsnappy-dev \
                                                            libzstd-dev

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools tox
          python3 -m pip install python-snappy zstandard

      - name: Cache Local Maven Repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install Java Avro for Interop Test
        working-directory: .
        run: mvn -B install -DskipTests

      - name: Create Interop Data Directory
        working-directory: .
        run: mkdir -p build/interop/data

      - name: Generate Interop Resources
        working-directory: lang/java/avro
        run: mvn -B -P interop-data-generate generate-resources

      - name: Generate Interop Data
        run: ./build.sh interop-data-generate

      - name: Run Interop Tests
        run: ./build.sh interop-data-test

  arm64:
    name: Python on Linux ARM64
    runs-on: ["self-hosted", "asf-arm"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update -q
          sudo apt-get install -q -y python3 python3-dev python3-pip git libbz2-dev libjansson-dev liblzma-dev libsnappy-dev libzstd-dev
          python3 -m pip install --upgrade pip setuptools tox

      - name: Build
        run: |
          set -x
          ./build.sh clean test