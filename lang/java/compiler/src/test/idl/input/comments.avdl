/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@namespace("testing")
protocol Comments {
    /** Documented Enum */
    enum /** Dangling Enum1 */ DocumentedEnum /** Dangling Enum2 */ {
        /** Dangling Enum3 */ A,
        /** Dangling Enum4 */ B,
        /** Dangling Enum5 */ C
    /** Dangling Enum6 */}
    /** Dangling Enum7 */=
    /** Dangling Enum8 */ A
    /** Dangling Enum9 */;

    // The "Dangling Enum9" doc comment above will be attributed to this enum.
    enum NotUndocumentedEnum {D,E}

    /** Dangling Fixed1 */ fixed
    /** Dangling Fixed2 */ DocumentedFixed
    /** Dangling Fixed3 */(
    /** Dangling Fixed4 */ 16
    /** Dangling Fixed5 */)
    /** Documented Fixed Type */;

    fixed UndocumentedFixed(16);

    /** Dangling Error1 */ error
    /** Documented Error */ DocumentedError
    /** Dangling Field1 */{
    /** Dangling Field2 */string
    /** Dangling Field3 */reason
    /** Documented Field */;
    /** Dangling Error2 */}

    // The "Dangling Error2" doc comment above will be attributed to this record.
    record NotUndocumentedRecord {
        string description;
    }

    /** Documented Method */ void
    /** Dangling Param1 */ documentedMethod
    /** Dangling Param2 */(
        /** Dangling Param3 */ string
        /** Dangling Param4 */ message
    /** Documented Parameter */)
    /** Dangling Method1 */ throws
    /** Dangling Method2 */ DocumentedError
    /** Dangling Method3 */;

    // The "Dangling Method3" doc comment above will be attributed to this method.
    void notUndocumentedMethod(string message);
}
